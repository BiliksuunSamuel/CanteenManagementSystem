<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dapplo.Windows.DesktopWindowsManager</name>
    </assembly>
    <members>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.Dwm">
            <summary>
                Dwm Utils class
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Dwm.ColorizationColor">
            <summary>
                Return the AERO Color
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Dwm.ColorizationSystemDrawingColor">
            <summary>
                Return the Aero Color
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Dwm.IsDwmEnabled">
            <summary>
                Helper method for an easy DWM check
            </summary>
            <returns>bool true if DWM is available AND active</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DisableComposition">
            <summary>
                Disable composition
            </summary>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmEnableBlurBehindWindow(System.IntPtr,Dapplo.Windows.DesktopWindowsManager.DwmBlurBehind@)">
            <summary>
                See
                <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969508(v=vs.85).aspx">
                    DwmEnableBlurBehindWindow
                    function
                </a>
                Enables the blur effect on a specified window.
            </summary>
            <param name="hWnd">The handle to the window on which the blur behind data is applied.</param>
            <param name="blurBehind">DwmBlurBehind</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmEnableComposition(System.UInt32)">
            <summary>
                See
                <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969510(v=vs.85).aspx">
                    DwmEnableComposition
                    function
                </a>
                As of Windows 8, calling this function with DWM_EC_DISABLECOMPOSITION has no effect. However, the function will
                still return a success code.
            </summary>
            <param name="uCompositionAction">
                DWM_EC_ENABLECOMPOSITION to enable DWM composition; DWM_EC_DISABLECOMPOSITION to
                disable composition.
            </param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmGetWindowAttribute(System.IntPtr,Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes,Dapplo.Windows.Common.Structs.NativeRect@,System.Int32)">
            <summary>
                See <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969515(v=vs.85).aspx">DwmGetWindowAttribute function</a>
                Retrieves the current value of a specified attribute applied to a window.
                TODO: Currently only DWMWA_EXTENDED_FRAME_BOUNDS is supported, due to the type of lpRect
            </summary>
            <param name="hWnd">The handle to the window from which the attribute data is retrieved.</param>
            <param name="dwAttribute">The attribute to retrieve, specified as a DwmWindowAttributes value.</param>
            <param name="lpRect">
                A pointer to a value that, when this function returns successfully, receives the current value of
                the attribute. The type of the retrieved value depends on the value of the dwAttribute parameter.
            </param>
            <param name="size"></param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmGetWindowAttribute(System.IntPtr,Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes,System.Boolean@,System.Int32)">
            <summary>
                See <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969515(v=vs.85).aspx">DwmGetWindowAttribute function</a>
                Retrieves the current value of a specified attribute applied to a window.
            </summary>
            <param name="hWnd">The handle to the window from which the attribute data is retrieved.</param>
            <param name="dwAttribute">The attribute to retrieve, specified as a DwmWindowAttributes value.</param>
            <param name="pvAttribute">A pointer to a value that, when this function returns successfully, receives the current value of
                the attribute. The type of the retrieved value depends on the value of the dwAttribute parameter.
            </param>
            <param name="size"></param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmIsCompositionEnabled(System.Boolean@)">
            <summary>
                See
                <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969518(v=vs.85).aspx">
                    DwmIsCompositionEnabled
                    function
                </a>
                Obtains a value that indicates whether Desktop Window Manager (DWM) composition is enabled.
                Applications on machines running Windows 7 or earlier can listen for composition state changes by handling the
                WM_DWMCOMPOSITIONCHANGED notification.
                Note: As of Windows 8, DWM composition is always enabled.
                If an app declares Windows 8 compatibility in their manifest, this function will receive a value of TRUE through
                pfEnabled.
                If no such manifest entry is found, Windows 8 compatibility is not assumed and this function receives a value of
                FALSE through pfEnabled.
                This is done so that older programs that interpret a value of TRUE to imply that high contrast mode is off can
                continue to make the correct decisions about rendering their images.
                (Note that this is a bad practiceâ€”you should use the SystemParametersInfo function with the SPI_GETHIGHCONTRAST
                flag to determine the state of high contrast mode.)
            </summary>
            <param name="pfEnabled">out bool to get the current state</param>
            <returns>If this function succeeds, it returns S_OK. Otherwise, it returns an HRESULT error code.</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmpActivateLivePreview(System.UInt32,System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
                Activate Aero Peek
            </summary>
            <param name="active">uint</param>
            <param name="hWnd">IntPtr</param>
            <param name="onTopHandle">IntPtr</param>
            <param name="unknown">uint</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmpStartOrStopFlip3D">
            <summary>
                Activate Windows + Tab effect
            </summary>
            <returns>bool if it worked</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmQueryThumbnailSourceSize(System.IntPtr,Dapplo.Windows.Common.Structs.NativeSize@)">
            <summary>
            Retrieves the source size of the Desktop Window Manager (DWM) thumbnail.
            </summary>
            <param name="hThumbnail">A handle to the thumbnail to retrieve the source window size from.</param>
            <param name="size">a NativeSize structure that, when this function returns successfully, receives the size of the source thumbnail.</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmRegisterThumbnail(System.IntPtr,System.IntPtr,System.IntPtr@)">
            <summary>
            Creates a Desktop Window Manager (DWM) thumbnail relationship between the destination and source windows.
            </summary>
            <param name="hWndDestination">The handle to the window that will use the DWM thumbnail. Setting the destination window handle to anything other than a top-level window type will result in a return value of E_INVALIDARG.</param>
            <param name="hWndSource">The handle to the window to use as the thumbnail source. Setting the source window handle to anything other than a top-level window type will result in a return value of E_INVALIDARG.</param>
            <param name="phThumbnailId">A pointer to a handle that, when this function returns successfully, represents the registration of the DWM thumbnail.</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmSetIconicLivePreviewBitmap(System.IntPtr,System.IntPtr,Dapplo.Windows.Common.Structs.NativePoint@,Dapplo.Windows.DesktopWindowsManager.Enums.DwmSetIconicLivePreviewFlags)">
            <summary>
                Sets a static, iconic bitmap to display a live preview (also known as a Peek preview) of a window or tab. The
                taskbar can use this bitmap to show a full-sized preview of a window or tab.
                See
                <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd389410(v=vs.85).aspx">
                    DwmSetIconicLivePreviewBitmap
                    function
                </a>
            </summary>
            <param name="hWnd">IntPtr for the window Handle</param>
            <param name="hBitmap">IntPtr for the bitmap</param>
            <param name="ptClient">
                The offset of a tab window's client region (the content area inside the client window frame)
                from the host window's frame. This offset enables the tab window's contents to be drawn correctly in a live preview
                when it is drawn without its frame.
            </param>
            <param name="setIconicLivePreviewFlags">The display options for the live preview.</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmSetWindowAttribute(System.IntPtr,Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes,System.IntPtr,System.UInt32)">
            <summary>
                Sets the value of non-client rendering attributes for a window.
                See
                <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969524(v=vs.85).aspx">
                    DwmSetWindowAttribute
                    function
                </a>
            </summary>
            <param name="hWnd">IntPtr with the handle to the window that will receive the attributes.</param>
            <param name="dwAttributeToSet">
                A single DWMWINDOWATTRIBUTE flag to apply to the window. This parameter specifies the
                attribute and the pvAttribute parameter points to the value of that attribute.
            </param>
            <param name="pvAttributeValue">
                A pointer to the value of the attribute specified in the dwAttribute parameter.
                Different DWMWINDOWATTRIBUTE flags require different value types.
            </param>
            <param name="cbAttribute">The size, in bytes, of the value type pointed to by the pvAttribute parameter.</param>
            <returns></returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmUnregisterThumbnail(System.IntPtr)">
            <summary>
            Removes a Desktop Window Manager (DWM) thumbnail relationship created by the DwmRegisterThumbnail function.
            </summary>
            <param name="hThumbnailId">The handle to the thumbnail relationship to be removed. Null or non-existent handles will result in a return value of E_INVALIDARG.</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.DwmUpdateThumbnailProperties(System.IntPtr,Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties@)">
            <summary>
            Updates the properties for a Desktop Window Manager (DWM) thumbnail.
            </summary>
            <param name="hThumbnailId">IntPtr The handle to the DWM thumbnail to be updated. Null or invalid thumbnails, as well as thumbnails owned by other processes will result in a return value of E_INVALIDARG.</param>
            <param name="props">A pointer to a DwmThumbnailProperties structure that contains the new thumbnail properties.</param>
            <returns>HResult</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.EnableComposition">
            <summary>
                Enable DWM composition
            </summary>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.GetExtendedFrameBounds(System.IntPtr,Dapplo.Windows.Common.Structs.NativeRect@)">
            <summary>
                Helper method to get the window size for DWM Windows
            </summary>
            <param name="hWnd">IntPtr</param>
            <param name="rectangle">out RECT</param>
            <returns>bool true if it worked</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.IsWindowCloaked(System.IntPtr)">
            <summary>
            This checks if the specified Window is cloaked, e.g. on a different virtual desktop
            </summary>
            <param name="hWnd">IntPtr</param>
            <returns>bool if the window is cloaked</returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.GetSharedSurface(System.IntPtr,System.Int64,System.UInt32,System.UInt32,System.UInt32@,System.IntPtr@,System.UInt64)">
            <summary>
            Retrieves the shared surface of the specified hWnd, maybe https://github.com/notr1ch/DWMCapture can help on the usage.
            http://undoc.airesoft.co.uk/user32.dll/DwmGetDxSharedSurface.php?
            </summary>
            <param name="hWnd">IntPtr</param>
            <param name="adapterLuid"></param>
            <param name="one"></param>
            <param name="two"></param>
            <param name="pD3DFormat"></param>
            <param name="pSharedHandle"></param>
            <param name="unknown"></param>
            <returns></returns>
        </member>
        <member name="M:Dapplo.Windows.DesktopWindowsManager.Dwm.UpdateWindowShared(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            maybe https://github.com/notr1ch/DWMCapture can help on the usage.
            </summary>
            <param name="hWnd">IntPtr</param>
            <param name="one"></param>
            <param name="two"></param>
            <param name="three"></param>
            <param name="hMonitor"></param>
            <param name="unknown"></param>
            <returns></returns>
        </member>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.Enums.DwmBlurBehindFlags">
            <summary>
                Configuration flags for the DwmEnableBlurBehindWindow function
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmBlurBehindFlags.None">
            <summary>
                None
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmBlurBehindFlags.Enable">
            <summary>
                Transparency Enabled
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmBlurBehindFlags.BlurRegion">
            <summary>
                Region enabled
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmBlurBehindFlags.TransitionMaximized">
            <summary>
                Transition on maximized enabled
            </summary>
        </member>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.Enums.DwmSetIconicLivePreviewFlags">
            <summary>
                Configuration flags for the DwmSetIconicLivePreviewBitmap function
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmSetIconicLivePreviewFlags.None">
            <summary>
                None
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmSetIconicLivePreviewFlags.DisplayFrame">
            <summary>
                Displays a frame around the provided bitmap.
            </summary>
        </member>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.Enums.DwmThumbnailPropertyFlags">
            <summary>
                A flag to indicate which properties are set by the DwmUpdateThumbnailProperties method
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmThumbnailPropertyFlags.Destination">
            <summary>
                A value for the rcDestination member has been specified.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmThumbnailPropertyFlags.Source">
            <summary>
                A value for the rcSource member has been specified.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmThumbnailPropertyFlags.Opacity">
            <summary>
                A value for the opacity member has been specified.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmThumbnailPropertyFlags.Visible">
            <summary>
                A value for the fVisible member has been specfied.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmThumbnailPropertyFlags.SourceClientAreaOnly">
            <summary>
                A value for the fSourceClientAreaOnly member has been specified.
            </summary>
        </member>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes">
            <summary>
                Flags used by the DwmGetWindowAttribute and DwmSetWindowAttribute functions to specify window attributes for
                non-client rendering.
                See http://msdn.microsoft.com/en-us/library/aa969530.aspx
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.NcRenderingEnabled">
            <summary>
                Use with DwmGetWindowAttribute. Discovers whether non-client rendering is enabled. The retrieved value is of type
                BOOL. TRUE if non-client rendering is enabled; otherwise, FALSE.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.NcrenderingPolicy">
            <summary>
                Use with DwmSetWindowAttribute. Sets the non-client rendering policy. The pvAttribute parameter points to a value
                from the DWMNCRENDERINGPOLICY enumeration.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.TransitionsForcedisabled">
            <summary>
                Use with DwmSetWindowAttribute. Enables or forcibly disables DWM transitions. The pvAttribute parameter points to a
                value of TRUE to disable transitions or FALSE to enable transitions.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.AllowNcPaint">
            <summary>
                Use with DwmSetWindowAttribute. Enables content rendered in the non-client area to be visible on the frame drawn by
                DWM. The pvAttribute parameter points to a value of TRUE to enable content rendered in the non-client area to be
                visible on the frame; otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.CaptionButtonBounds">
            <summary>
                Use with DwmGetWindowAttribute. Retrieves the bounds of the caption button area in the window-relative space. The
                retrieved value is of type RECT.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.NonclientRtlLayout">
            <summary>
                Use with DwmSetWindowAttribute. Specifies whether non-client content is right-to-left (RTL) mirrored. The
                pvAttribute parameter points to a value of TRUE if the non-client content is right-to-left (RTL) mirrored;
                otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.ForceIconicRepresentation">
            <summary>
                Use with DwmSetWindowAttribute. Forces the window to display an iconic thumbnail or peek representation (a static
                bitmap), even if a live or snapshot representation of the window is available. This value normally is set during a
                window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the
                value to change over time. The pvAttribute parameter points to a value of TRUE to require a iconic thumbnail or
                peek representation; otherwise, it points to FALSE.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.Flip3dPolicy">
            <summary>
                Use with DwmSetWindowAttribute. Sets how Flip3D treats the window. The pvAttribute parameter points to a value from
                the DWMFLIP3DWINDOWPOLICY enumeration.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.ExtendedFrameBounds">
            <summary>
                Use with DwmGetWindowAttribute. Retrieves the extended frame bounds rectangle in screen space. The retrieved value
                is of type RECT.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.HasIconicBitmap">
            <summary>
                Use with DwmSetWindowAttribute. The window will provide a bitmap for use by DWM as an iconic thumbnail or peek
                representation (a static bitmap) for the window. DWMWA_HAS_ICONIC_BITMAP can be specified with
                DWMWA_FORCE_ICONIC_REPRESENTATION. DWMWA_HAS_ICONIC_BITMAP normally is set during a window's creation and not
                changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The
                pvAttribute parameter points to a value of TRUE to inform DWM that the window will provide an iconic thumbnail or
                peek representation; otherwise, it points to FALSE.
                Windows Vista and earlier:  This value is not supported.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.DisallowPeek">
            <summary>
                Use with DwmSetWindowAttribute. Do not show peek preview for the window. The peek view shows a full-sized preview
                of the window when the mouse hovers over the window's thumbnail in the taskbar. If this attribute is set, hovering
                the mouse pointer over the window's thumbnail dismisses peek (in case another window in the group has a peek
                preview showing). The pvAttribute parameter points to a value of TRUE to prevent peek functionality or FALSE to
                allow it.
                Windows Vista and earlier:  This value is not supported.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.ExcludedFromPeek">
            <summary>
                Use with DwmSetWindowAttribute. Prevents a window from fading to a glass sheet when peek is invoked. The
                pvAttribute parameter points to a value of TRUE to prevent the window from fading during another window's peek or
                FALSE for normal behavior.
                Windows Vista and earlier:  This value is not supported.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.Cloak">
            <summary>
                Use with DwmGetWindowAttribute. Cloaks the window such that it is not visible to the user. The window is still
                composed by DWM.
                Using with DirectComposition:  Use the DWMWA_CLOAK flag to cloak the layered child window when animating a
                representation of the window's content via a DirectComposition visual which has been associated with the layered
                child window. For more details on this usage case, see How to How to animate the bitmap of a layered child window.
                Windows 7 and earlier:  This value is not supported.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.Cloaked">
            <summary>
                Use with DwmGetWindowAttribute. If the window is cloaked, provides one of the following values explaining why:
                Name	Value	Meaning
                DWM_CLOAKED_APP	0x0000001	The window was cloaked by its owner application.
                DWM_CLOAKED_SHELL	0x0000002	The window was cloaked by the Shell.
                DWM_CLOAKED_INHERITED	0x0000004	The cloak value was inherited from its owner window.
                Windows 7 and earlier:  This value is not supported.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.FreezeRepresentation">
            <summary>
                Use with DwmSetWindowAttribute. Freeze the window's thumbnail image with its current visuals. Do no further live
                updates on the thumbnail image to match the window's contents.
                Windows 7 and earlier:  This value is not supported.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Enums.DwmWindowAttributes.Last">
            <summary>
                The maximum recognized DWMWINDOWATTRIBUTE value, used for validation purposes.
            </summary>
        </member>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.DwmBlurBehind">
            <summary>
                See
                <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa969500(v=vs.85).aspx">DWM_BLURBEHIND structure</a>
                Specifies Desktop Window Manager (DWM) blur-behind properties.
                Used by the DwmEnableBlurBehindWindow function.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.DwmBlurBehind._dwFlags">
            <summary>
                A bitwise combination of DWM Blur Behind constant values that indicates which of the members of this structure have
                been set.
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.DwmBlurBehind.Enable">
            <summary>
                TRUE to register the window handle to DWM blur behind;
                FALSE to unregister the window handle from DWM blur behind.
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.DwmBlurBehind.BlurRegion">
            <summary>
                The region within the client area where the blur behind will be applied.
                A NULL value will apply the blur behind the entire client area.
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.DwmBlurBehind.TransitionOnMaximized">
            <summary>
                TRUE if the window's colorization should transition to match the maximized windows; otherwise, FALSE.
            </summary>
        </member>
        <member name="T:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties">
            <summary>
                Specifies Desktop Window Manager (DWM) thumbnail properties. Used by the DwmUpdateThumbnailProperties function.
                See: http://msdn.microsoft.com/en-us/library/aa969502.aspx
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties._dwFlags">
            <summary>
                A bitwise combination of DWM thumbnail constant values that indicates which members of this structure are set.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties._rcDestination">
            <summary>
                The area in the destination window where the thumbnail will be rendered.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties._rcSource">
            <summary>
                The region of the source window to use as the thumbnail. By default, the entire window is used as the thumbnail.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties._opacity">
            <summary>
                The opacity with which to render the thumbnail. 0 is fully transparent while 255 is fully opaque. The default value
                is 255.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties._fVisible">
            <summary>
                TRUE to make the thumbnail visible; otherwise, FALSE. The default is FALSE.
            </summary>
        </member>
        <member name="F:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties._fSourceClientAreaOnly">
            <summary>
                TRUE to use only the thumbnail source's client area; otherwise, FALSE. The default is FALSE.
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties.Destination">
            <summary>
                Property for the destination, setting this also changes the dwFlags
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties.Source">
            <summary>
                Property for the source, setting this also changes the dwFlags
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties.Opacity">
            <summary>
                Property for the Opacity, setting this also changes the dwFlags
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties.Visible">
            <summary>
                Visible property, setting this also changes the dwFlags
            </summary>
        </member>
        <member name="P:Dapplo.Windows.DesktopWindowsManager.Structs.DwmThumbnailProperties.SourceClientAreaOnly">
            <summary>
                Property SourceClientAreaOnly, setting this also changes the dwFlags
            </summary>
        </member>
    </members>
</doc>
